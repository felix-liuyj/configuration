version: "3"

services:
  kafka-node-1:
    image: bitnami/kafka:latest
    container_name: kafka-node-1
    hostname: kafka-node-1
    user: root
    networks:
      - kafka_net
    ports:
      - 10100:9092
    environment:
      # 设置broker最大内存，和初始内存
      KAFKA_HEAP_OPTS: -Xmx512M -Xms256M
      # 定义kafka服务端socket监听端口（Docker内部的ip地址和端口）
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      #定义外网访问地址（宿主机ip地址和端口）
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_NODE_ID: 1
      KAFKA_KRAFT_CLUSTER_ID: AAdAtQwviMccIQRerjrNRS
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://:9092
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka-node-1:9093,2@kafka-node-2:9093,3@kafka-node-3:9093
      ALLOW_PLAINTEXT_LISTENER: yes
      # 定义安全协议
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      # 允许使用Kraft
      KAFKA_ENABLE_KRAFT: yes
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      # JMX configure
      KAFKA_JMX_HOSTNAME: kafka-node-1 
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_OPTS: 
        -Djava.rmi.server.hostname=kafka-node-1
        -Dcom.sun.management.jmxremote.local.only=false
        -Dcom.sun.management.jmxremote.rmi.port=9999
        -Dcom.sun.management.jmxremote.port=9999
        -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false
    volumes:
      - /mnt/data/docker/kafka/node-1/data:/bitnami/kafka
    restart: always

  kafka-node-2:
    image: bitnami/kafka:latest
    container_name: kafka-node-2
    hostname: kafka-node-2
    user: root
    networks:
      - kafka_net
    ports:
      - 10101:9092
    environment:
      KAFKA_HEAP_OPTS: -Xmx512M -Xms256M
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_BROKER_ID: 2
      KAFKA_CFG_NODE_ID: 2
      KAFKA_KRAFT_CLUSTER_ID: AAdAtQwviMccIQRerjrNRS
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://:9092
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka-node-1:9093,2@kafka-node-2:9093,3@kafka-node-3:9093
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_ENABLE_KRAFT: yes
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_JMX_HOSTNAME: kafka-node-2
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_OPTS: 
        -Djava.rmi.server.hostname=kafka-node-2
        -Dcom.sun.management.jmxremote.local.only=false
        -Dcom.sun.management.jmxremote.rmi.port=9999
        -Dcom.sun.management.jmxremote.port=9999
        -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false
    volumes:
      - /mnt/data/docker/kafka/node-2/data:/bitnami/kafka
    restart: always

  kafka-node-3:
    image: bitnami/kafka:latest
    container_name: kafka-node-3
    hostname: kafka-node-3
    user: root
    networks:
      - kafka_net
    ports:
      - 10102:9092
    environment:
      KAFKA_HEAP_OPTS: -Xmx512M -Xms256M
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_BROKER_ID: 3
      KAFKA_CFG_NODE_ID: 3
      KAFKA_KRAFT_CLUSTER_ID: AAdAtQwviMccIQRerjrNRS
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://:9092
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka-node-1:9093,2@kafka-node-2:9093,3@kafka-node-3:9093
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_ENABLE_KRAFT: yes
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_JMX_HOSTNAME: kafka-node-3
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_OPTS: 
        -Djava.rmi.server.hostname=kafka-node-3
        -Dcom.sun.management.jmxremote.local.only=false
        -Dcom.sun.management.jmxremote.rmi.port=9999
        -Dcom.sun.management.jmxremote.port=9999
        -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false
    volumes:
      - /mnt/data/docker/kafka/node-3/data:/bitnami/kafka
    restart: always

  kafka-schema-registry:
    image: confluentinc/cp-schema-registry:latest
    container_name: kafka-schema-registry
    hostname: kafka-schema-registry
    user: root
    networks:
      - kafka_net
    ports:
      - 10180:8085
    depends_on:
      - kafka-node-1
      - kafka-node-2
      - kafka-node-3
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-node-1:9092,PLAINTEXT://kafka-node-2:9092,PLAINTEXT://kafka-node-3:9092
      SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: PLAINTEXT
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_JMX_PORT: 9999
      SCHEMA_REGISTRY_LISTENERS: http://kafka-schema-registry:8085
      SCHEMA_REGISTRY_SCHEMA_REGISTRY_INTER_INSTANCE_PROTOCOL: http
      SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: INFO
      SCHEMA_REGISTRY_KAFKASTORE_TOPIC: _schemas
    restart: always

  kafka-connect:
    image: confluentinc/cp-kafka-connect:latest
    container_name: kafka-connect
    hostname: kafka-connect
    depends_on:
      - kafka-node-1
      - kafka-node-2
      - kafka-node-3
    networks:
      - kafka_net
    ports:
      - 10190:8083
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka-node-1:9092,kafka-node-2:9092,kafka-node-3:9092
      # CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: default-avro
      CONNECT_CONFIG_STORAGE_TOPIC: default.avro.config
      CONNECT_OFFSET_STORAGE_TOPIC: default.avro.offsets
      CONNECT_STATUS_STORAGE_TOPIC: default.avro.status
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://kafka-schema-registry:8083
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://kafka-schema-registry:8083
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
      # CONNECT_LOG4J_ROOT_LOGLEVEL: DEBUG
    # volumes:
    # - /tmp/connect-cluster-host-file-test/:/tmp/test
    restart: always

  kafka-rest:
    image: confluentinc/cp-kafka-rest:latest
    container_name: kafka-rest
    hostname: kafka-rest
    depends_on:
      - kafka-node-1
      - kafka-node-2
      - kafka-node-3
    user: root
    networks:
      - kafka_net
    ports:
      - 10199:8082
    environment:
      # KAFKA_REST_HOST_NAME: kafka-rest
      KAFKA_REST_SCHEMA_REGISTRY_URL: http://kafka-schema-registry:8083
      KAFKA_REST_JMX_PORT: 9999
      KAFKA_REST_BOOTSTRAP_SERVERS: kafka-node-1:9092,kafka-node-2:9092,kafka-node-3:9092
    restart: always
  
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    hostname: kafka-ui
    networks:
      - kafka_net
    ports:
      - 8080:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: true
      AUTH_TYPE: LDAP
      SPRING_LDAP_URLS: ldap://ip-172-31-19-148.ap-east-1.compute.internal:389
      SPRING_LDAP_BASE: cn=Admin Group,dc=materia-logic,dc=com
      SPRING_LDAP_ADMIN_USER: cn=admin,dc=materia-logic,dc=com
      SPRING_LDAP_ADMIN_PASSWORD: MLAdmin2307
      SPRING_LDAP_USER_FILTER_SEARCH_BASE: cn=Admin Group,dc=materia-logic,dc=com
      SPRING_LDAP_USER_FILTER_SEARCH_FILTER: (&(uid={0})(objectClass=inetOrgPerson))
      # Cluster Configure
      KAFKA_CLUSTERS_0_NAME: Kafka Cluster Main
      KAFKA_CLUSTERS_0_READONLY: false
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: ip-172-31-19-148.ap-east-1.compute.internal:10100,ip-172-31-19-148.ap-east-1.compute.internal:10101,ip-172-31-19-148.ap-east-1.compute.internal:10102
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://ip-172-31-19-148.ap-east-1.compute.internal:10180
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: Kafka Cluster Main Connectors
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: http://ip-172-31-19-148.ap-east-1.compute.internal:10190
      KAFKA_CLUSTERS_0_METRICS_PORT: 9999
      KAFKA_CLUSTERS_0_METRICS_TYPE: JMX
      # SPRING_CONFIG_ADDITIONAL-LOCATION: /roles.yml
      # SPRING_CONFIG_ADDITIONAL-LOCATION: /config.yml
    # volumes:
    #   - /mnt/data/docker/kafka/ui/config.yml:/etc/kafkaui/dynamic_config.yaml
    restart: always


networks:
  kafka_net:
    driver: bridge