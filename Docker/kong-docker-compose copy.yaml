version: "3.9"

services:
  kong-database:
    image: "postgres:13"
    container_name: kong-database
    hostname: kong-db
    networks:
      - kong-net
    command: "-c max_connections=5000"
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kongpass
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 3s
      timeout: 5s
      retries: 10
    restart: always

  kong-migration:
    container_name: kong-migration
    image: kong:latest
    command: "kong migrations bootstrap"
    networks:
      - kong-net
    depends_on:
      - kong-database
    environment:
      KONG_PG_HOST: kong-database
      KONG_DATABASE: postgres
      # KONG_PG_USER: kong
      KONG_PG_PASSWORD: kongpass
    restart: on-failure

  kong:
    container_name: kong
    image: kong:latest
    hostname: kong
    networks:
      - kong-net
    depends_on:
      - kong-migration
      - kong-database
    ports:
      - "8001:8001"
      - "8002:8002"
      - "8003:8000"
      - "8443:8443"
      - "8444:8444"
    environment:
      TZ: Asia/Shanghai
      # KONG_ADMIN_GUI_PATH: /
      KONG_ADMIN_GUI_URL: http://172.29.153.93:8002
      KONG_ADMIN_GUI_API_URL: 0.0.0.0:8001
      # KONG_ADMIN_GUI_LISTEN: 0.0.0.0:8002
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kongpass
      # KONG_CASSANDRA_CONTACT_POINTS: kong-database
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
    restart: always

networks:
  kong-net:
    driver: bridge