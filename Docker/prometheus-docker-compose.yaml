version: "3"

services:
  monitor-prometheus:
    image: prom/prometheus
    container_name: monitor-prometheus
    hostname: monitor-prometheus
    restart: always
    user: root
    volumes:
      - /mnt/data/docker/monitor/prometheus/conf:/etc/prometheus
      - /mnt/data/docker/monitor/prometheus/data:/prometheus
    ports:
      - "8004:9090"
    networks:
      - monitor
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"

  monitor-alertmanager:
    image: prom/alertmanager
    container_name: monitor-alertmanager
    hostname: monitor-alertmanager
    user: root
    restart: always
    volumes:
      - /mnt/data/docker/monitor/alertmanager/conf:/etc/alertmanager
    ports:
      - "8005:9093"
    networks:
      - monitor

  monitor-grafana:
    image: grafana/grafana
    container_name: monitor-grafana
    hostname: monitor-grafana
    user: root
    restart: always
    ports:
      - "8006:3000"
    volumes:
      - /mnt/data/docker/monitor/grafana/data:/var/lib/grafana
      - /mnt/data/docker/monitor/grafana/config:/etc/grafana
    networks:
      - monitor

  monitor-consul:
    image: consul:1.9.4
    container_name: monitor-consul
    restart: always
    user: root
    ports:
      - "8007:8500"
    volumes:
      - /mnt/data/docker/monitor/consul/data:/consul/data
    command: [agent, -server, -ui, -client=0.0.0.0, -bootstrap-expect=1]

  monitor-node-exporter:
    image: quay.io/prometheus/node-exporter
    container_name: monitor-node-exporter
    hostname: monitor-node-exporter
    restart: always
    user: root
    pid: host
    ports:
      - "10000:9100"
    networks:
      - monitor
    command:
      - "--path.rootfs=/host"
    volumes:
      - "/:/host:ro,rslave"

  monitor-mongodb-exporter:
    image: percona/mongodb_exporter:0.40.0
    container_name: monitor-mongodb-exporter
    hostname: monitor-mongodb-exporter
    restart: always
    ports:
      - "10001:9216"
      - "17001:17001"
    networks:
      - monitor
    environment:
      - MONGODB_URI=mongodb://ip-172-31-27-134.ap-east-1.compute.internal:20600,ip-172-31-30-14.ap-east-1.compute.internal:20600,ip-172-31-23-122.ap-east-1.compute.internal:20600
      - MONGODB_USER=ClusterMonitor
      - MONGODB_PASSWORD=SLsmqhXRMg7hn96xzfvUTZCVrZp3J5Vh

  monitor-kafka-exporter:
    image: redpandadata/kminion:latest
    container_name: monitor-kafka-exporter
    hostname: monitor-kafka-exporter
    restart: always
    ports:
      - "10002:8080"
    environment:
      CONFIG_FILEPATH: /app/kminion.yaml
      # KAFKA_BROKERS: ip-172-31-19-148.ap-east-1.compute.internal:10100,ip-172-31-19-148.ap-east-1.compute.internal:10101,ip-172-31-19-148.ap-east-1.compute.internal:10102
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /mnt/data/docker/monitor/kminion/configure.yaml:/app/kminion.yaml
    networks:
      - monitor
      - kafka-cluster_kafka_net

  monitor-postgresql-exporter:
    image: prometheuscommunity/postgres-exporter
    container_name: monitor-postgresql-exporter
    hostname: monitor-postgresql-exporter
    restart: always
    environment:
      DATA_SOURCE_NAME: postgresql://root:QvY5sJozv8oxxvGh8EOjqapoa12IoYI6@postgresql:5432/postgres?sslmode=disable
    ports:
      - 10003:9187

networks:
  monitor:
    driver: bridge
  kafka-cluster_kafka_net:
    external: true